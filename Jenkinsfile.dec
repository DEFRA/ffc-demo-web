pipeline {
  agent any
  def registry = "562955126301.dkr.ecr.eu-west-2.amazonaws.com"
  def imageName = "ffc-demo-web"
  def tag = "jenkins"
  def namespace = "ffc-demo"
	stages {
    docker.withRegistry("https://$registry", 'ecr:eu-west-2:ecr-user') {
      stage('Build Test Image') {
        sh "docker-compose -p $imageName-$BUILD_NUMBER -f docker-compose.yaml -f docker-compose.test.yaml build --no-cache $imageName"
      }
      stage('Test') {
        sh 'mkdir -p test-output'
        sh 'chmod 777 test-output'
        sh "docker-compose -p $imageName-$BUILD_NUMBER -f docker-compose.yaml -f docker-compose.test.yaml up $imageName"
      }
      post {
        always {
          sh "docker-compose -p $imageName-$BUILD_NUMBER -f docker-compose.yaml -f docker-compose.test.yaml down -v"
          junit 'test-output/junit.xml'
        }
      }
      stage('Push Production Image') {
        sh "docker-compose build --no-cache"
        sh "docker tag $imageName $registry/$imageName:$tag"
        sh "docker push $registry/$imageName:$tag"
      }
      stage('Helm install') {
        withKubeConfig([credentialsId: 'kubeuser001']) {
          sh "helm upgrade $imageName --install --namespace $namespace --values ./helm/jenkins-eks.yaml ./helm"
        }
      }
    }
  }
}
