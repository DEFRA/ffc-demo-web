parameters:
  - name: runPerformanceTests
    displayName: Run Performance Tests
    type: boolean
    default: false

  - name: runAcceptanceTests
    displayName: Run Acceptance Tests
    type: boolean
    default: true

  - name: runZapTests
    displayName: Run Zap Tests
    type: boolean
    default: false

  - name: runAxeTests
    displayName: Run Axe Tests
    type: boolean
    default: false

trigger:
  batch: true
  branches:
    include:
      - "*"

jobs:

- job: RunZapTests
  condition: ${{  eq(parameters.runZapTests, 'true') }}
  workspace:
    clean: all
  pool:
    vmImage: 'ubuntu-latest'  
  steps:
  - script: |
      sudo mkdir -p -m 777 $(System.DefaultWorkingDirectory)/test-output
      sudo chmod -R 777 $(System.DefaultWorkingDirectory)/zap
      docker-compose -f docker-compose.yaml -f docker-compose.zap.yaml run --rm zap-baseline-scan
    displayName: Run Zap Tests
  - script: | 
      htmlfile="$(System.DefaultWorkingDirectory)/test-output/zap-report.html" 
      mdfile="$(System.DefaultWorkingDirectory)/zap-report.md" 
      cd $(System.DefaultWorkingDirectory)
      wget https://github.com/jgm/pandoc/releases/download/3.1.11/pandoc-3.1.11-1-amd64.deb
      sudo dpkg -i pandoc-3.1.11-1-amd64.deb
      pandoc $htmlfile -o $mdfile 

      # show Extensions tab as text 
      echo "##vso[task.addattachment type=Distributedtask.Core.Summary;name=ZapReport;]$mdfile" 
  - task: PublishPipelineArtifact@1
    displayName: Publish  Test Report
    inputs:
      targetPath: $(System.DefaultWorkingDirectory)/test-output
      artifact: $(build.buildid)-zap-results
    condition: always() 

- job: RunAxeTests
  condition: ${{  eq(parameters.runAxeTests, 'true') }}
  dependsOn: RunZapTests
  workspace:
    clean: all
  pool:
    vmImage: 'ubuntu-latest'  
  variables:
    - group: ffc-demo-web-acceptance-tests
  steps:
  - script: |
      sudo mkdir -p -m 777 $(System.DefaultWorkingDirectory)/test-output
      sudo mkdir -p -m 777 $(System.DefaultWorkingDirectory)/test-output/axe
      docker-compose -f docker-compose.yaml -f docker-compose.axe.yaml run --rm axe
    displayName: Run Axe Tests
  - script: | 
      htmlfile="$(System.DefaultWorkingDirectory)/test-output/axe/axe.json" 
      echo "##vso[task.addattachment type=Distributedtask.Core.Summary;name=AXEReportJSON;]$htmlfile" 

  - powershell: Get-ChildItem -Path '$(System.DefaultWorkingDirectory)/test-output' -recurse | select Name

  - task: PublishPipelineArtifact@1
    displayName: Publish  Test Report
    inputs:
      targetPath: $(System.DefaultWorkingDirectory)/test-output/axe
      artifact: $(build.buildid)-axe-results
    condition: always() 

- job: RunPerformanceTests
  dependsOn: RunAxeTests
  condition: ${{  eq(parameters.runPerformanceTests, 'true') }}
  workspace:
    clean: all
  pool:
    vmImage: 'ubuntu-latest'  
  variables:
    - group: ffc-demo-web-acceptance-tests
  steps:
  - script: |
      sudo mkdir -p -m 777 $(System.DefaultWorkingDirectory)/test-output
      sudo mkdir -p -m 777 $(System.DefaultWorkingDirectory)/test-output/performance
      cd test/performance
      docker-compose -f ../../docker-compose.yaml -f docker-compose.jmeter.yaml run jmeter-test
    displayName: Run Performance Tests

  - task: PublishPipelineArtifact@1
    displayName: Publish Performance Test Report
    inputs:
      targetPath: $(System.DefaultWorkingDirectory)/test-output/performance
      artifact: $(build.buildid)-perf-results

  - script: |
      JMETER_RESULTS=$(System.DefaultWorkingDirectory)/test-output/performance/testresults.jtl
      JUNIT_RESULTS=$(System.DefaultWorkingDirectory)/test-output/performance/testresults.xml
      python3 $(System.DefaultWorkingDirectory)/.azuredevops/scripts/jtl_junit_converter.py $JMETER_RESULTS $JUNIT_RESULTS
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Convert JMeter Results to JUnit Format'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testRunTitle: 'FFC Demo Tests'
      testResultsFiles: '$(System.DefaultWorkingDirectory)/test-output/performance/testresults.xml'
      failTaskOnFailedTests: true
    displayName: 'Publish Load Testing Results'

  # - task: LakshayKaushik.PublishHTMLReports.publishhtmlreport.publishhtmlreport@1
  #   displayName: Publish Html Report
  #   inputs:
  #     htmlType: Jmeter
  #     JmeterReportsPath: '/test-output/htmlreport'


- job: RunAcceptanceTests
  dependsOn: RunPerformanceTests
  condition: ${{ eq(parameters.runAcceptanceTests, 'true') }}
  workspace:
    clean: all
  pool:
    vmImage: 'ubuntu-latest'
  
  variables:
    - group: ffc-demo-web-acceptance-tests

  steps:

  - bash: |
      echo '127.0.0.1 host.docker.internal' | sudo tee -a /etc/hosts    
    displayName: 'Update Hosts File'
    enabled: false

  - bash: |
      docker-compose --version
      sudo apt-get remove docker-compose
      VERSION=$(curl --silent https://api.github.com/repos/docker/compose/releases/latest | grep -Po '"tag_name": "\K.*\d')
      DESTINATION=/usr/local/bin/docker-compose
      sudo curl -L https://github.com/docker/compose/releases/download/${VERSION}/docker-compose-$(uname -s)-$(uname -m) -o $DESTINATION
      sudo chmod 755 $DESTINATION    
      docker-compose --version
    displayName: 'Update docker compose'
    enabled: true

  - script: |
      sudo mkdir -p -m 777 $(System.DefaultWorkingDirectory)/test/acceptance/html-reports
      sudo chmod -R 777 $(System.DefaultWorkingDirectory)/app
      IP_ADDRESS=$(ip addr show | grep "\binet\b.*\bdocker0\b" | awk '{print $2}' | cut -d '/' -f 1)
      echo ${IP_ADDRESS}

      export MESSAGE_QUEUE_HOST=defra-demo-service.servicebus.windows.net
      export MESSAGE_QUEUE_PASSWORD=tvlWgSbxmxJufPkLy3im62+SIVUz5iBAS+ASbO3bT7E=
      export MESSAGE_QUEUE_USER=RootManageSharedAccessKey
      export CLAIM_QUEUE_ADDRESS=ffc-demo-claim

      # start web application
      docker-compose -f docker-compose.yaml -f docker-compose.override.yaml run --service-ports --build -d --rm ffc-demo-web     

      export TEST_ENVIRONMENT_ROOT_URL=http://${IP_ADDRESS}:3000
      
      # run acceptance
      cd test/acceptance
      docker-compose -f docker-compose.yaml -f docker-compose.override.yaml run --build --rm wdio-cucumber      
    displayName: Run Acceptance Tests

  - powershell: Get-ChildItem -Path '$(System.DefaultWorkingDirectory)' -recurse

  - powershell: Get-ChildItem -Path '$(Agent.WorkFolder)' -recurse    

  - task: PublishPipelineArtifact@1
    displayName: Publish Acceptance Test Report
    inputs:
      targetPath: $(System.DefaultWorkingDirectory)/acceptance-tests
      artifact: $(build.buildid)-acceptance-results
    condition: always()    

  - script: | 
      htmlfile="$(System.DefaultWorkingDirectory)/acceptance-tests/acceptance-test-suite-report.html" 
      mdfile="$(System.DefaultWorkingDirectory)/report.md" 
      cd $(System.DefaultWorkingDirectory)
      wget https://github.com/jgm/pandoc/releases/download/3.1.11/pandoc-3.1.11-1-amd64.deb
      sudo dpkg -i pandoc-3.1.11-1-amd64.deb
      pandoc $htmlfile -o $mdfile 

      # show Extensions tab as text 
      echo "##vso[task.addattachment type=Distributedtask.Core.Summary;name=HTML2MD;]$mdfile" 
