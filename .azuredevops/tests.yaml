trigger: none

jobs:
- job: RunTest
  workspace:
    clean: all
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      cd test/performance
      docker-compose -f ../../docker-compose.yaml -f docker-compose.jmeter.yaml run jmeter-test

  - task: CmdLine@2
    inputs:
      script: |
        echo "Structure of work folder of this pipeline:"
        tree $(Agent.WorkFolder)/1
        echo "Build.ArtifactStagingDirectory:" 
        echo "$(Build.ArtifactStagingDirectory)"
        echo "Build.BinariesDirectory:" 
        echo "$(Build.BinariesDirectory)"
        echo "Build.SourcesDirectory:"
        echo "$(Build.SourcesDirectory)"

  # - powershell: Get-ChildItem -Path '$(System.DefaultWorkingDirectory)' -recurse

  - powershell: Get-ChildItem -Path '$(Agent.WorkFolder)' -recurse

  - task: CopyFiles@2
    displayName: Copy JMeter HTML Report
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/test-output/htmlreport'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/perf-tests'
      OverWrite: true
      flattenFolders: false

  - task: CopyFiles@2
    displayName: Copy JMeter Results (testresults.jtl)
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/app/test/performance'
      Contents: |
        testresults.jtl
      TargetFolder: '$(Build.ArtifactStagingDirectory)/perf-tests'
      OverWrite: false
      flattenFolders: true

  - task: PublishPipelineArtifact@1
    displayName: Publish Performance Test Report
    inputs:
      targetPath: $(Build.ArtifactStagingDirectory)/perf-tests
      artifact: $(build.buildid)-perf-results

  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: $(build.buildid)-perf-results

  # - task: LakshayKaushik.PublishHTMLReports.publishhtmlreport.publishhtmlreport@1
  #   displayName: Publish Html Report
  #   inputs:
  #     htmlType: Jmeter
  #     JmeterReportsPath: '/test-output/htmlreport'
