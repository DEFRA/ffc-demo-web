parameters:
  - name: runPerformanceTests
    displayName: Run Performance Tests
    type: boolean
    default: false

  - name: runAcceptanceTests
    displayName: Run Acceptance Tests
    type: boolean
    default: true

trigger: none

jobs:
- job: RunPerformanceTests
  condition: ${{  eq(parameters.runPerformanceTests, 'true') }}
  workspace:
    clean: all
  pool:
    vmImage: 'ubuntu-latest'  
  steps:
  - script: |
      cd test/performance
      docker-compose -f ../../docker-compose.yaml -f docker-compose.jmeter.yaml run jmeter-test
    displayName: Run Performance Tests

  # - task: CmdLine@2
  #   inputs:
  #     script: |
  #       echo "Structure of work folder of this pipeline:"
  #       tree $(Agent.WorkFolder)/1
  #       echo "Build.ArtifactStagingDirectory:" 
  #       echo "$(Build.ArtifactStagingDirectory)"
  #       echo "Build.BinariesDirectory:" 
  #       echo "$(Build.BinariesDirectory)"
  #       echo "Build.SourcesDirectory:"
  #       echo "$(Build.SourcesDirectory)"

  # - powershell: Get-ChildItem -Path '$(System.DefaultWorkingDirectory)' -recurse

  # - powershell: Get-ChildItem -Path '$(Agent.WorkFolder)' -recurse

  - task: CopyFiles@2
    displayName: Copy JMeter HTML Report
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/test-output/htmlreport'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/perf-tests'
      OverWrite: true
      flattenFolders: false

  - task: CopyFiles@2
    displayName: Copy JMeter Results (testresults.jtl)
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/test/performance'
      Contents: |
        testresults.jtl
      TargetFolder: '$(Build.ArtifactStagingDirectory)/perf-tests'
      OverWrite: false
      flattenFolders: true           

  - task: PublishPipelineArtifact@1
    displayName: Publish Performance Test Report
    inputs:
      targetPath: $(Build.ArtifactStagingDirectory)/perf-tests
      artifact: $(build.buildid)-perf-results

  - script: |
      JMETER_RESULTS=testresults.jtl
      JUNIT_RESULTS=testresults.xml
      python3 $(System.DefaultWorkingDirectory)/.azuredevops/scripts/jtl_junit_converter.py $JMETER_RESULTS $JUNIT_RESULTS
    workingDirectory: '$(Build.ArtifactStagingDirectory)/perf-tests'
    displayName: 'Convert JMeter Results to JUnit Format'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testRunTitle: 'FFC Demo Tests'
      testResultsFiles: '$(Build.ArtifactStagingDirectory)/perf-tests/testresults.xml'
      failTaskOnFailedTests: true
    displayName: 'Publish Load Testing Results'
  
  # - task: DownloadPipelineArtifact@0
  #   inputs:
  #     artifactName: $(build.buildid)-perf-results

  # - task: LakshayKaushik.PublishHTMLReports.publishhtmlreport.publishhtmlreport@1
  #   displayName: Publish Html Report
  #   inputs:
  #     htmlType: Jmeter
  #     JmeterReportsPath: '/test-output/htmlreport'


- job: RunAcceptanceTests
  condition: ${{ eq(parameters.runAcceptanceTests, 'true') }}
  workspace:
    clean: all
  pool:
    vmImage: 'ubuntu-latest'
  
  variables:
    - group: ffc-demo-web-acceptance-tests

  steps:

  - task: NodeTool@0
    displayName: 'Install Node.js v18'
    inputs:
      versionSpec: 'v18.x'
      checkLatest: true 
    enabled: false #this step takes long time to download nodejs file
  - bash: |
      echo '127.0.0.1 host.docker.internal' | sudo tee -a /etc/hosts    
    displayName: 'Update Hosts File'
    enabled: false

  - bash: |
      docker-compose --version
      sudo apt-get remove docker-compose
      VERSION=$(curl --silent https://api.github.com/repos/docker/compose/releases/latest | grep -Po '"tag_name": "\K.*\d')
      DESTINATION=/usr/local/bin/docker-compose
      sudo curl -L https://github.com/docker/compose/releases/download/${VERSION}/docker-compose-$(uname -s)-$(uname -m) -o $DESTINATION
      sudo chmod 755 $DESTINATION    
      docker-compose --version
    displayName: 'Update docker compose'
    enabled: true

  - script: |
  
      sudo mkdir -p -m 777 $(System.DefaultWorkingDirectory)/test/acceptance/html-reports
      sudo chmod -R 777 $(System.DefaultWorkingDirectory)/app
      IP_ADDRESS=$(ip addr show | grep "\binet\b.*\bdocker0\b" | awk '{print $2}' | cut -d '/' -f 1)
      echo ${IP_ADDRESS}

      export MESSAGE_QUEUE_HOST=defra-demo-service.servicebus.windows.net
      export MESSAGE_QUEUE_PASSWORD=tvlWgSbxmxJufPkLy3im62+SIVUz5iBAS+ASbO3bT7E=
      export MESSAGE_QUEUE_USER=RootManageSharedAccessKey
      export CLAIM_QUEUE_ADDRESS=ffc-demo-claim

      # start web application
      docker-compose -f docker-compose.yaml -f docker-compose.override.yaml run --service-ports --build -d --rm ffc-demo-web     

      export TEST_ENVIRONMENT_ROOT_URL=http://${IP_ADDRESS}:3000
      
      # run acceptance
      cd test/acceptance
      docker-compose -f docker-compose.yaml -f docker-compose.override.yaml up --build --abort-on-container-exit      
    displayName: Run Acceptance Tests

  - powershell: Get-ChildItem -Path '$(System.DefaultWorkingDirectory)' -recurse

  - powershell: Get-ChildItem -Path '$(Agent.WorkFolder)' -recurse    

  - task: CopyFiles@2
    displayName: Copy Acceptance HTML Report
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/test/acceptance/html-reports'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/acceptance-tests'
      OverWrite: true
      flattenFolders: false         
    condition: always()    

  - task: PublishPipelineArtifact@1
    displayName: Publish Acceptance Test Report
    inputs:
      targetPath: $(Build.ArtifactStagingDirectory)/acceptance-tests
      artifact: $(build.buildid)-acceptance-results
    condition: always()    

  - script: | 
      htmlfile="$(Build.ArtifactStagingDirectory)/acceptance-tests/acceptance-test-suite-report.html" 

      # show Extensions tab as text 
      echo "##vso[task.addattachment type=Distributedtask.Core.Summary;name=HTML2MD;]$htmlfile" 
