apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ quote .Values.name }}
spec:
  replicas: {{ quote .Values.replicas }}
  minReadySeconds: {{ quote .Values.minReadySeconds }}
  strategy: {}
  template:
    metadata:
      labels:
        app: {{ quote .Values.name }}
      annotations:
        redeployOnChange: {{ quote .Values.container.redeployOnChange }}
    spec:
      restartPolicy: {{ quote .Values.container.restartPolicy }}
      {{- if quote .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{ quote .Values.imagePullSecret }}
      {{- end }}
      containers:
      - name: {{ quote .Values.name }}
        image: {{ quote .Values.image }}
        {{- if quote .Values.container.command }}
        {{- with quote .Values.container.command }}
        command:
          {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with quote .Values.container.args }}
        args:
          {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- end }}
        imagePullPolicy: {{ quote .Values.container.imagePullPolicy }}
        securityContext:
          runAsUser: {{ quote .Values.container.runAsUser }}
          runAsNonRoot: {{ quote .Values.container.runAsNonRoot }}
          readOnlyRootFilesystem: {{ quote .Values.container.readOnlyRootFilesystem }}
          allowPrivilegeEscalation: {{ quote .Values.container.allowPrivilegeEscalation }}
        env:
        - name: NODE_ENV
          value: {{ quote .Values.environment }}
        - name: PORT
          value: "3000"
        - name: COOKIE_PASSWORD
          value: {{ quote .Values.cookiePassword }}
        - name: REDIS_HOSTNAME
          value: {{ quote .Values.container.redisname }}
        - name: API_GATEWAY
          value: {{ quote .Values.container.apiGatewayUrl }}
        - name: REST_CLIENT_TIMEOUT_IN_MILLIS
          value: {{ quote .Values.container.restClientTimeoutMillis }}
        - name: STATIC_CACHE_TIMEOUT_IN_MILLIS
          value: {{ quote .Values.container.staticCacheTimeoutMillis }}
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        resources:
          requests:
            memory: {{ quote .Values.container.requestMemory }}
            cpu: {{ quote .Values.container.requestCpu }}
          limits:
            memory: {{ quote .Values.container.limitMemory }}
            cpu: {{ quote .Values.container.limitCpu }}
        livenessProbe:
          httpGet:
            path: {{ quote .Values.livenessProbe.path }}
            port: {{ quote .Values.livenessProbe.port }}
          initialDelaySeconds: {{ quote .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ quote .Values.livenessProbe.periodSeconds }}
          failureThreshold: {{ quote .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ quote .Values.readinessProbe.path }}
            port: {{ quote .Values.readinessProbe.port }}
          initialDelaySeconds: {{ quote .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ quote .Values.readinessProbe.periodSeconds }}
          failureThreshold: {{ quote .Values.readinessProbe.failureThreshold }}
