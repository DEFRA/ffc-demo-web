environment: development
name: ffc-demo-web
namespace: ffc-demo
image: ffc-demo-web
workstream: ffc-demo

labels:
  component: web

appInsights:
  connectionString:

azureIdentity:
  clientID: not-a-real-clientID
  resourceID: not-a-real-resourceID

service:
  port: 80
  type: ClusterIP

container:
  redisHostname: redis-redis-ha.default
  redisPassword: redis
  redisPort: 6379
  redisPartition: ffc-demo
  imagePullPolicy: IfNotPresent
  requestMemory: 50Mi
  requestCpu: 50m
  limitMemory: 200Mi
  limitCpu: 400m
  restClientTimeoutMillis: 20000
  staticCacheTimeoutMillis: 54000
  port: 3000
  cookiePassword: passwordpasswordpasswordpasswordpassword
  messageQueueHost: amq
  claimQueueAddress: claim
  googleTagManagerKey: GTM-N5QK7RL
  protectiveMonitoringUrl:

ingress:
  class: nginx
  endpoint: ffc-demo
  server: example.com

deployment:
  restartPolicy: Always
  priorityClassName: low
  replicas: 1
  minReadySeconds: 5
  imagePullSecret:
  useLinkerd: true

readinessProbe:
  path: /healthy
  port: 3000
  initialDelaySeconds: 20
  periodSeconds: 10
  failureThreshold: 3

livenessProbe:
  path: /healthz
  port: 3000
  initialDelaySeconds: 30
  periodSeconds: 10
  failureThreshold: 3

aadWorkloadIdentity: true

serviceAccount:
  name: ffc-demo
  roleArn: true

# Placeholder - To be removed after updates to ADP Helm Library
containerConfigMap:
  name: 'ffc-demo-web-config-map'
  configServiceUrl: 
  keyValues:
    labelFilter: 'ffc-demo-web'
    refresh:
      interval: 2m
      monitorKey: 'Sentinel'
      monitorLabel: 'ffc-demo-web'
    keyVaults:
      secretName: ffc-demo-web-container-secret
      refresh:
        interval: 2m
userAssignedIdentity:
  managedIdName: